<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.44.1 (20200629.0846)
 -->
<!-- Title: Graphical Class Hierarchy Pages: 1 -->
<svg width="451pt" height="1151pt"
 viewBox="0.00 0.00 451.00 1150.50" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1146.5)">
<title>Graphical Class Hierarchy</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-1146.5 447,-1146.5 447,4 -4,4"/>
<!-- Node58 -->
<g id="node1" class="node">
<title>Node58</title>
<g id="a_node1"><a xlink:title=" ">
<polygon fill="white" stroke="#bfbfbf" points="0,-391.5 0,-410.5 57,-410.5 57,-391.5 0,-391.5"/>
<text text-anchor="middle" x="28.5" y="-398.5" font-family="Helvetica,sans-Serif" font-size="10.00">true_type</text>
</a>
</g>
</g>
<!-- Node0 -->
<g id="node2" class="node">
<title>Node0</title>
<g id="a_node2"><a xlink:href="structplayrho_1_1d2_1_1IsValidJointType_3_01T_00_01std_1_1void__t_3_01decltype_07GetBodyA_07std_f46b9ec9d43482967902ab937217ed36.html" target="_top" xlink:title="An &quot;is valid joint type&quot; trait.">
<polygon fill="white" stroke="black" points="93,-958 93,-1142 443,-1142 443,-958 93,-958"/>
<text text-anchor="start" x="101" y="-1130" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::d2::IsValidJoint</text>
<text text-anchor="start" x="101" y="-1119" font-family="Helvetica,sans-Serif" font-size="10.00">Type&lt; T, std::void_t&lt; decltype</text>
<text text-anchor="start" x="101" y="-1108" font-family="Helvetica,sans-Serif" font-size="10.00">(GetBodyA(std::declval&lt; T &gt;</text>
<text text-anchor="start" x="101" y="-1097" font-family="Helvetica,sans-Serif" font-size="10.00">())), decltype(GetBodyB(std::</text>
<text text-anchor="start" x="101" y="-1086" font-family="Helvetica,sans-Serif" font-size="10.00">declval&lt; T &gt;())), decltype(GetCollideConnected</text>
<text text-anchor="start" x="101" y="-1075" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; T &gt;())), decltype(ShiftOrigin</text>
<text text-anchor="start" x="101" y="-1064" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; T &amp; &gt;(), std::declval&lt; Length2</text>
<text text-anchor="start" x="101" y="-1053" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;())), decltype(InitVelocity(std::declval&lt; T</text>
<text text-anchor="start" x="101" y="-1042" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp; &gt;(), std::declval&lt; std::vector&lt; BodyConstraint</text>
<text text-anchor="start" x="101" y="-1031" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; &amp; &gt;(), std::declval&lt; StepConf &gt;(), std::declval</text>
<text text-anchor="start" x="101" y="-1020" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; ConstraintSolverConf &gt;())), decltype(SolveVelocity</text>
<text text-anchor="start" x="101" y="-1009" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; T &amp; &gt;(), std::declval&lt; std::vector&lt; BodyConstraint</text>
<text text-anchor="start" x="101" y="-998" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; &amp; &gt;(), std::declval&lt; StepConf &gt;())), decltype(SolvePosition</text>
<text text-anchor="start" x="101" y="-987" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; T &gt;(), std::declval&lt; std::vector&lt; BodyConstraint</text>
<text text-anchor="start" x="101" y="-976" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; &amp; &gt;(), std::declval&lt; ConstraintSolverConf &gt;())), decltype(std</text>
<text text-anchor="middle" x="268" y="-965" font-family="Helvetica,sans-Serif" font-size="10.00">::declval&lt; T &gt;()==std::declval&lt; T &gt;()), decltype(Joint{std::declval&lt; T &gt;()})&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node58&#45;&gt;Node0 -->
<g id="edge1" class="edge">
<title>Node58&#45;&gt;Node0</title>
<path fill="none" stroke="midnightblue" d="M29.47,-420.96C29.71,-508.68 34.34,-859.49 93,-949 95.01,-952.07 97.15,-955.05 99.4,-957.96"/>
<polygon fill="midnightblue" stroke="midnightblue" points="32.97,-420.78 29.46,-410.79 25.97,-420.79 32.97,-420.78"/>
</g>
<!-- Node60 -->
<g id="node3" class="node">
<title>Node60</title>
<g id="a_node3"><a xlink:href="structplayrho_1_1d2_1_1IsValidShapeType_3_01T_00_01std_1_1void__t_3_01decltype_07GetChildCount_0d6dff8bc9a2931522642c5eb50f9e01f.html" target="_top" xlink:title="An &quot;is valid shape type&quot; trait.">
<polygon fill="white" stroke="black" points="133.5,-777 133.5,-939 402.5,-939 402.5,-777 133.5,-777"/>
<text text-anchor="start" x="141.5" y="-927" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::d2::IsValidShape</text>
<text text-anchor="start" x="141.5" y="-916" font-family="Helvetica,sans-Serif" font-size="10.00">Type&lt; T, std::void_t&lt; decltype</text>
<text text-anchor="start" x="141.5" y="-905" font-family="Helvetica,sans-Serif" font-size="10.00">(GetChildCount(std::declval</text>
<text text-anchor="start" x="141.5" y="-894" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T &gt;())), decltype(GetChild</text>
<text text-anchor="start" x="141.5" y="-883" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; T &gt;(), std::declval</text>
<text text-anchor="start" x="141.5" y="-872" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; ChildCounter &gt;())), decltype(GetMassData</text>
<text text-anchor="start" x="141.5" y="-861" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; T &gt;())), decltype(GetVertexRadius</text>
<text text-anchor="start" x="141.5" y="-850" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; T &gt;(), std::declval&lt; ChildCounter</text>
<text text-anchor="start" x="141.5" y="-839" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;())), decltype(GetDensity(std::declval&lt; T &gt;())</text>
<text text-anchor="start" x="141.5" y="-828" font-family="Helvetica,sans-Serif" font-size="10.00">), decltype(GetFriction(std::declval&lt; T &gt;())), decltype</text>
<text text-anchor="start" x="141.5" y="-817" font-family="Helvetica,sans-Serif" font-size="10.00">(GetRestitution(std::declval&lt; T &gt;())), decltype(Transform</text>
<text text-anchor="start" x="141.5" y="-806" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; T &amp; &gt;(), std::declval&lt; Mat22 &gt;())), decltype</text>
<text text-anchor="start" x="141.5" y="-795" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; T &gt;()==std::declval&lt; T &gt;()), decltype(Shape</text>
<text text-anchor="middle" x="268" y="-784" font-family="Helvetica,sans-Serif" font-size="10.00">{std::declval&lt; T &gt;()})&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node58&#45;&gt;Node60 -->
<g id="edge2" class="edge">
<title>Node58&#45;&gt;Node60</title>
<path fill="none" stroke="midnightblue" d="M30.64,-420.95C34.89,-489.12 51.72,-711.67 93,-768 103.86,-782.81 117.87,-795.38 133.24,-805.99"/>
<polygon fill="midnightblue" stroke="midnightblue" points="34.12,-420.5 30.03,-410.73 27.14,-420.92 34.12,-420.5"/>
</g>
<!-- Node61 -->
<g id="node4" class="node">
<title>Node61</title>
<g id="a_node4"><a xlink:href="structplayrho_1_1detail_1_1IsIterableImpl_3_01T_00_01std_1_1void__t_3_01decltype_07begin_07std_13619530b21097a509a6589d454070d72.html" target="_top" xlink:title="Low&#45;level implementation of the is&#45;iterable true value trait.">
<polygon fill="white" stroke="black" points="187.5,-662 187.5,-758 348.5,-758 348.5,-662 187.5,-662"/>
<text text-anchor="start" x="195.5" y="-746" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::detail::IsIterable</text>
<text text-anchor="start" x="195.5" y="-735" font-family="Helvetica,sans-Serif" font-size="10.00">Impl&lt; T, std::void_t&lt; decltype</text>
<text text-anchor="start" x="195.5" y="-724" font-family="Helvetica,sans-Serif" font-size="10.00">(begin(std::declval&lt; T &gt;()))</text>
<text text-anchor="start" x="195.5" y="-713" font-family="Helvetica,sans-Serif" font-size="10.00">, decltype(end(std::declval&lt;</text>
<text text-anchor="start" x="195.5" y="-702" font-family="Helvetica,sans-Serif" font-size="10.00"> T &gt;())), decltype(++std::declval</text>
<text text-anchor="start" x="195.5" y="-691" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; decltype(begin(std::declval&lt; T</text>
<text text-anchor="start" x="195.5" y="-680" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp; &gt;()))&amp; &gt;()), decltype(*begin(std</text>
<text text-anchor="middle" x="268" y="-669" font-family="Helvetica,sans-Serif" font-size="10.00">::declval&lt; T &gt;())) &gt; &gt;</text>
</a>
</g>
</g>
<!-- Node58&#45;&gt;Node61 -->
<g id="edge3" class="edge">
<title>Node58&#45;&gt;Node61</title>
<path fill="none" stroke="midnightblue" d="M32.01,-420.82C39.13,-474.11 61.04,-618.72 93,-653 117.39,-679.15 153.95,-693.33 187.27,-701"/>
<polygon fill="midnightblue" stroke="midnightblue" points="35.45,-420.11 30.68,-410.65 28.51,-421.02 35.45,-420.11"/>
</g>
<!-- Node62 -->
<g id="node5" class="node">
<title>Node62</title>
<g id="a_node5"><a xlink:href="structplayrho_1_1HasType_3_01T_00_01std_1_1tuple_3_01T_00_01Ts_8_8_8_01_4_01_4.html" target="_top" xlink:title="Has&#45;type trait true class.">
<polygon fill="white" stroke="black" points="210,-613 210,-643 326,-643 326,-613 210,-613"/>
<text text-anchor="start" x="218" y="-631" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::HasType&lt; T,</text>
<text text-anchor="middle" x="268" y="-620" font-family="Helvetica,sans-Serif" font-size="10.00"> std::tuple&lt; T, Ts... &gt; &gt;</text>
</a>
</g>
</g>
<!-- Node58&#45;&gt;Node62 -->
<g id="edge4" class="edge">
<title>Node58&#45;&gt;Node62</title>
<path fill="none" stroke="midnightblue" d="M29.28,-421.07C30,-462.22 37.95,-556.21 93,-603 124.86,-630.08 172.45,-635.33 209.81,-634.37"/>
<polygon fill="midnightblue" stroke="midnightblue" points="32.78,-420.93 29.23,-410.95 25.78,-420.96 32.78,-420.93"/>
</g>
<!-- Node63 -->
<g id="node6" class="node">
<title>Node63</title>
<g id="a_node6"><a xlink:href="structplayrho_1_1IsAddable_3_01T1_00_01T2_00_01std_1_1void__t_3_01decltype_07T1_02_03_09T2_02_03_08_4_01_4.html" target="_top" xlink:title="Template specializing for addable types.">
<polygon fill="white" stroke="black" points="202,-552.5 202,-593.5 334,-593.5 334,-552.5 202,-552.5"/>
<text text-anchor="start" x="210" y="-581.5" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::IsAddable</text>
<text text-anchor="start" x="210" y="-570.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T1, T2, std::void</text>
<text text-anchor="middle" x="268" y="-559.5" font-family="Helvetica,sans-Serif" font-size="10.00">_t&lt; decltype(T1{}+T2{})&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node58&#45;&gt;Node63 -->
<g id="edge5" class="edge">
<title>Node58&#45;&gt;Node63</title>
<path fill="none" stroke="midnightblue" d="M32.4,-420.96C38.06,-452.26 53.68,-512.45 93,-543 123.62,-566.79 166.47,-574.39 201.98,-576"/>
<polygon fill="midnightblue" stroke="midnightblue" points="35.81,-420.15 30.74,-410.85 28.9,-421.28 35.81,-420.15"/>
</g>
<!-- Node64 -->
<g id="node7" class="node">
<title>Node64</title>
<g id="a_node7"><a xlink:href="structplayrho_1_1IsArithmetic_3_01T_00_01std_1_1void__t_3_01decltype_07T_02_03_09T_02_03_08_00_0e30487095fcbd3150b7b99d467763a14.html" target="_top" xlink:title="Template specialization for valid/acceptable &quot;arithmetic&quot; types.">
<polygon fill="white" stroke="black" points="204,-470.5 204,-533.5 332,-533.5 332,-470.5 204,-470.5"/>
<text text-anchor="start" x="212" y="-521.5" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::IsArithmetic</text>
<text text-anchor="start" x="212" y="-510.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T, std::void_t&lt; decltype</text>
<text text-anchor="start" x="212" y="-499.5" font-family="Helvetica,sans-Serif" font-size="10.00">(T{}+T{}), decltype(T{} </text>
<text text-anchor="start" x="212" y="-488.5" font-family="Helvetica,sans-Serif" font-size="10.00">&#45; T{}), decltype(T{} *T{})</text>
<text text-anchor="middle" x="268" y="-477.5" font-family="Helvetica,sans-Serif" font-size="10.00">, decltype(T{}/T{})&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node58&#45;&gt;Node64 -->
<g id="edge6" class="edge">
<title>Node58&#45;&gt;Node64</title>
<path fill="none" stroke="midnightblue" d="M43.46,-418.5C55.25,-432.11 73.32,-450.39 93,-461 127.15,-479.4 169.44,-489.61 203.77,-495.24"/>
<polygon fill="midnightblue" stroke="midnightblue" points="46.07,-416.17 36.97,-410.75 40.7,-420.67 46.07,-416.17"/>
</g>
<!-- Node65 -->
<g id="node8" class="node">
<title>Node65</title>
<g id="a_node8"><a xlink:href="structplayrho_1_1IsDivisable_3_01T1_00_01T2_00_01std_1_1void__t_3_01decltype_07T1_02_03_2T2_02_03_08_4_01_4.html" target="_top" xlink:title="Template specializing for divisable types.">
<polygon fill="white" stroke="black" points="207.5,-410.5 207.5,-451.5 328.5,-451.5 328.5,-410.5 207.5,-410.5"/>
<text text-anchor="start" x="215.5" y="-439.5" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::IsDivisable</text>
<text text-anchor="start" x="215.5" y="-428.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T1, T2, std::void_t</text>
<text text-anchor="middle" x="268" y="-417.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; decltype(T1{}/T2{})&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node58&#45;&gt;Node65 -->
<g id="edge7" class="edge">
<title>Node58&#45;&gt;Node65</title>
<path fill="none" stroke="midnightblue" d="M67.25,-405.77C104.91,-410.53 163.33,-417.9 207.28,-423.46"/>
<polygon fill="midnightblue" stroke="midnightblue" points="67.57,-402.28 57.21,-404.5 66.69,-409.23 67.57,-402.28"/>
</g>
<!-- Node66 -->
<g id="node9" class="node">
<title>Node66</title>
<g id="a_node9"><a xlink:href="structplayrho_1_1IsEqualityComparable_3_01T1_00_01T2_00_01std_1_1void__t_3_01decltype_07T1_02_03_0a_0aT2_02_03_08_4_01_4.html" target="_top" xlink:title="Template specialization for equality comparable types.">
<polygon fill="white" stroke="black" points="192,-350.5 192,-391.5 344,-391.5 344,-350.5 192,-350.5"/>
<text text-anchor="start" x="200" y="-379.5" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::IsEqualityComparable</text>
<text text-anchor="start" x="200" y="-368.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T1, T2, std::void_t&lt; decltype</text>
<text text-anchor="middle" x="268" y="-357.5" font-family="Helvetica,sans-Serif" font-size="10.00">(T1{}==T2{})&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node58&#45;&gt;Node66 -->
<g id="edge8" class="edge">
<title>Node58&#45;&gt;Node66</title>
<path fill="none" stroke="midnightblue" d="M67.45,-396.21C100.83,-391.99 150.42,-385.73 191.82,-380.5"/>
<polygon fill="midnightblue" stroke="midnightblue" points="66.69,-392.77 57.21,-397.5 67.57,-399.72 66.69,-392.77"/>
</g>
<!-- Node67 -->
<g id="node10" class="node">
<title>Node67</title>
<g id="a_node10"><a xlink:href="structplayrho_1_1IsInequalityComparable_3_01T1_00_01T2_00_01std_1_1void__t_3_01decltype_07T1_02_03_01_9_0aT2_02_03_08_4_01_4.html" target="_top" xlink:title="Template specialization for inequality comparable types.">
<polygon fill="white" stroke="black" points="189.5,-290.5 189.5,-331.5 346.5,-331.5 346.5,-290.5 189.5,-290.5"/>
<text text-anchor="start" x="197.5" y="-319.5" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::IsInequalityComparable</text>
<text text-anchor="start" x="197.5" y="-308.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T1, T2, std::void_t&lt; decltype</text>
<text text-anchor="middle" x="268" y="-297.5" font-family="Helvetica,sans-Serif" font-size="10.00">(T1{} !=T2{})&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node58&#45;&gt;Node67 -->
<g id="edge9" class="edge">
<title>Node58&#45;&gt;Node67</title>
<path fill="none" stroke="midnightblue" d="M43.29,-383.17C54.98,-369.38 73.01,-351 93,-341 122.61,-326.19 158.2,-318.53 189.46,-314.63"/>
<polygon fill="midnightblue" stroke="midnightblue" points="40.47,-381.09 36.87,-391.05 45.9,-385.51 40.47,-381.09"/>
</g>
<!-- Node68 -->
<g id="node11" class="node">
<title>Node68</title>
<g id="a_node11"><a xlink:href="structplayrho_1_1IsMatrix_3_01Vector_3_01Vector_3_01T_00_01N_01_4_00_01M_01_4_01_4.html" target="_top" xlink:title="Trait class specialization for checking if type is a matrix type.">
<polygon fill="white" stroke="black" points="217,-230.5 217,-271.5 319,-271.5 319,-230.5 217,-230.5"/>
<text text-anchor="start" x="225" y="-259.5" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::IsMatrix&lt;</text>
<text text-anchor="start" x="225" y="-248.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Vector&lt; Vector&lt; T,</text>
<text text-anchor="middle" x="268" y="-237.5" font-family="Helvetica,sans-Serif" font-size="10.00"> N &gt;, M &gt; &gt;</text>
</a>
</g>
</g>
<!-- Node58&#45;&gt;Node68 -->
<g id="edge10" class="edge">
<title>Node58&#45;&gt;Node68</title>
<path fill="none" stroke="midnightblue" d="M34.08,-381.42C41.52,-354.25 58.96,-305.69 93,-281 128.73,-255.09 179.32,-248.83 216.75,-248.32"/>
<polygon fill="midnightblue" stroke="midnightblue" points="30.64,-380.76 31.56,-391.31 37.42,-382.49 30.64,-380.76"/>
</g>
<!-- Node69 -->
<g id="node12" class="node">
<title>Node69</title>
<g id="a_node12"><a xlink:href="structplayrho_1_1IsMultipliable_3_01T1_00_01T2_00_01std_1_1void__t_3_01decltype_07T1_02_03_01_5T2_02_03_08_4_01_4.html" target="_top" xlink:title="Template specializing for multipliable types.">
<polygon fill="white" stroke="black" points="205.5,-170.5 205.5,-211.5 330.5,-211.5 330.5,-170.5 205.5,-170.5"/>
<text text-anchor="start" x="213.5" y="-199.5" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::IsMultipliable</text>
<text text-anchor="start" x="213.5" y="-188.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T1, T2, std::void_t</text>
<text text-anchor="middle" x="268" y="-177.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; decltype(T1{} *T2{})&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node58&#45;&gt;Node69 -->
<g id="edge11" class="edge">
<title>Node58&#45;&gt;Node69</title>
<path fill="none" stroke="midnightblue" d="M30.26,-381.18C32.85,-343.64 44.13,-262.27 93,-221 123.8,-194.99 168.87,-187.79 205.42,-186.93"/>
<polygon fill="midnightblue" stroke="midnightblue" points="26.76,-381.15 29.71,-391.32 33.75,-381.53 26.76,-381.15"/>
</g>
<!-- Node70 -->
<g id="node13" class="node">
<title>Node70</title>
<g id="a_node13"><a xlink:href="structplayrho_1_1IsSquareMatrix_3_01Vector_3_01Vector_3_01T_00_01M_01_4_00_01M_01_4_01_4.html" target="_top" xlink:title="Trait class specialization for checking if type is a square matrix type.">
<polygon fill="white" stroke="black" points="208,-110.5 208,-151.5 328,-151.5 328,-110.5 208,-110.5"/>
<text text-anchor="start" x="216" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::IsSquareMatrix</text>
<text text-anchor="start" x="216" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; Vector&lt; Vector&lt; T, M</text>
<text text-anchor="middle" x="268" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;, M &gt; &gt;</text>
</a>
</g>
</g>
<!-- Node58&#45;&gt;Node70 -->
<g id="edge12" class="edge">
<title>Node58&#45;&gt;Node70</title>
<path fill="none" stroke="midnightblue" d="M31.99,-381.19C38.92,-329.26 60.12,-191.11 93,-161 123.63,-132.95 170.59,-126.19 208,-126.04"/>
<polygon fill="midnightblue" stroke="midnightblue" points="28.48,-381.04 30.66,-391.41 35.42,-381.94 28.48,-381.04"/>
</g>
<!-- Node71 -->
<g id="node14" class="node">
<title>Node71</title>
<g id="a_node14"><a xlink:href="structplayrho_1_1IsVector_3_01Vector_3_01T_00_01N_01_4_01_4.html" target="_top" xlink:title="Trait class specialization for checking if type is a Vector type..">
<polygon fill="white" stroke="black" points="219.5,-61 219.5,-91 316.5,-91 316.5,-61 219.5,-61"/>
<text text-anchor="start" x="227.5" y="-79" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::IsVector&lt;</text>
<text text-anchor="middle" x="268" y="-68" font-family="Helvetica,sans-Serif" font-size="10.00"> Vector&lt; T, N &gt; &gt;</text>
</a>
</g>
</g>
<!-- Node58&#45;&gt;Node71 -->
<g id="edge13" class="edge">
<title>Node58&#45;&gt;Node71</title>
<path fill="none" stroke="midnightblue" d="M30.81,-381.15C35.24,-320.53 51.74,-139.62 93,-101 126.42,-69.71 180.41,-66.51 219.4,-69.22"/>
<polygon fill="midnightblue" stroke="midnightblue" points="27.31,-381.08 30.1,-391.3 34.29,-381.57 27.31,-381.08"/>
</g>
<!-- Node72 -->
<g id="node15" class="node">
<title>Node72</title>
<g id="a_node15"><a xlink:href="structplayrho_1_1propagate__const_1_1is__propagate__const_3_01propagate__const_3_01U_01_4_01_4.html" target="_top" xlink:title="Trait for detecting that the given type is this one.">
<polygon fill="white" stroke="black" points="187.5,-0.5 187.5,-41.5 348.5,-41.5 348.5,-0.5 187.5,-0.5"/>
<text text-anchor="start" x="195.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::propagate</text>
<text text-anchor="start" x="195.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">_const&lt; T &gt;::is_propagate</text>
<text text-anchor="middle" x="268" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">_const&lt; propagate_const&lt; U &gt; &gt;</text>
</a>
</g>
</g>
<!-- Node58&#45;&gt;Node72 -->
<g id="edge14" class="edge">
<title>Node58&#45;&gt;Node72</title>
<path fill="none" stroke="midnightblue" d="M30.23,-381.1C33.13,-314.19 45.99,-98.84 93,-52 117.45,-27.64 154.02,-18.7 187.33,-16.34"/>
<polygon fill="midnightblue" stroke="midnightblue" points="26.73,-381.03 29.83,-391.17 33.73,-381.32 26.73,-381.03"/>
</g>
</g>
</svg>
