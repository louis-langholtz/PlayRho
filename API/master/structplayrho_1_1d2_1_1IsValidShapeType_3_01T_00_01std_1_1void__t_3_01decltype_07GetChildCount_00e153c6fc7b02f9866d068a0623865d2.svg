<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: playrho::d2::IsValidShapeType&lt; T, std::void_t&lt; decltype(GetChildCount(std::declval&lt; T &gt;())), decltype(GetChild(std::declval&lt; T &gt;(), std::declval&lt; ChildCounter &gt;())), decltype(GetMassData(std::declval&lt; T &gt;())), decltype(GetVertexRadius(std::declval&lt; T &gt;(), std::declval&lt; ChildCounter &gt;())), decltype(GetDensity(std::declval&lt; T &gt;())), decltype(GetFriction(std::declval&lt; T &gt;())), decltype(GetRestitution(std::declval&lt; T &gt;())), decltype(std::declval&lt; T &gt;()==std::declval&lt; T &gt;()), decltype(std::declval&lt; DecayedTypeIfNotSame&lt; T, Shape &gt;&gt;()), decltype(std::is_constructible_v&lt; DecayedTypeIfNotSame&lt; T, Shape &gt;, T &gt;)&gt; &gt; Pages: 1 -->
<svg width="386pt" height="227pt"
 viewBox="0.00 0.00 386.00 227.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 223)">
<title>playrho::d2::IsValidShapeType&lt; T, std::void_t&lt; decltype(GetChildCount(std::declval&lt; T &gt;())), decltype(GetChild(std::declval&lt; T &gt;(), std::declval&lt; ChildCounter &gt;())), decltype(GetMassData(std::declval&lt; T &gt;())), decltype(GetVertexRadius(std::declval&lt; T &gt;(), std::declval&lt; ChildCounter &gt;())), decltype(GetDensity(std::declval&lt; T &gt;())), decltype(GetFriction(std::declval&lt; T &gt;())), decltype(GetRestitution(std::declval&lt; T &gt;())), decltype(std::declval&lt; T &gt;()==std::declval&lt; T &gt;()), decltype(std::declval&lt; DecayedTypeIfNotSame&lt; T, Shape &gt;&gt;()), decltype(std::is_constructible_v&lt; DecayedTypeIfNotSame&lt; T, Shape &gt;, T &gt;)&gt; &gt;</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-223 382,-223 382,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="An &quot;is valid shape type&quot; trait.">
<polygon fill="#bfbfbf" stroke="black" points="0,-0.5 0,-162.5 378,-162.5 378,-0.5 0,-0.5"/>
<text text-anchor="start" x="8" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::d2::IsValidShape</text>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">Type&lt; T, std::void_t&lt; decltype</text>
<text text-anchor="start" x="8" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">(GetChildCount(std::declval</text>
<text text-anchor="start" x="8" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T &gt;())), decltype(GetChild</text>
<text text-anchor="start" x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; T &gt;(), std::declval</text>
<text text-anchor="start" x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; ChildCounter &gt;())), decltype(GetMassData</text>
<text text-anchor="start" x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; T &gt;())), decltype(GetVertexRadius</text>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; T &gt;(), std::declval&lt; ChildCounter</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;())), decltype(GetDensity(std::declval&lt; T &gt;())</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">), decltype(GetFriction(std::declval&lt; T &gt;())), decltype</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">(GetRestitution(std::declval&lt; T &gt;())), decltype(std::</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">declval&lt; T &gt;()==std::declval&lt; T &gt;()), decltype(std::declval</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; DecayedTypeIfNotSame&lt; T, Shape &gt;&gt;()), decltype(std::is_constructible</text>
<text text-anchor="middle" x="189" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">_v&lt; DecayedTypeIfNotSame&lt; T, Shape &gt;, T &gt;)&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:title=" ">
<polygon fill="white" stroke="#bfbfbf" points="147,-199.5 147,-218.5 231,-218.5 231,-199.5 147,-199.5"/>
<text text-anchor="middle" x="189" y="-206.5" font-family="Helvetica,sans-Serif" font-size="10.00">std::true_type</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M189,-189.13C189,-181.64 189,-172.48 189,-162.7"/>
<polygon fill="midnightblue" stroke="midnightblue" points="185.5,-189.37 189,-199.37 192.5,-189.37 185.5,-189.37"/>
</g>
</g>
</svg>
