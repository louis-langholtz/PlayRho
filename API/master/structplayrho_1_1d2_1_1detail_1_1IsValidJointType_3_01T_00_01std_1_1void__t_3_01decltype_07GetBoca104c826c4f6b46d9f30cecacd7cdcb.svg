<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: playrho::d2::detail::IsValidJointType&lt; T, std::void_t&lt; decltype(GetBodyA(std::declval&lt; T &gt;())), decltype(GetBodyB(std::declval&lt; T &gt;())), decltype(GetCollideConnected(std::declval&lt; T &gt;())), decltype(ShiftOrigin(std::declval&lt; T &amp; &gt;(), std::declval&lt; Length2 &gt;())), decltype(InitVelocity(std::declval&lt; T &amp; &gt;(), std::declval&lt; const Span&lt; BodyConstraint &gt; &amp; &gt;(), std::declval&lt; StepConf &gt;(), std::declval&lt; ConstraintSolverConf &gt;())), decltype(SolveVelocity(std::declval&lt; T &amp; &gt;(), std::declval&lt; const Span&lt; BodyConstraint &gt; &amp; &gt;(), std::declval&lt; StepConf &gt;())), decltype(SolvePosition(std::declval&lt; T &gt;(), std::declval&lt; const Span&lt; BodyConstraint &gt; &amp; &gt;(), std::declval&lt; ConstraintSolverConf &gt;())), decltype(std::declval&lt; T &gt;()==std::declval&lt; T &gt;()), decltype(Joint{std::declval&lt; T &gt;()})&gt; &gt; Pages: 1 -->
<svg width="415pt" height="271pt"
 viewBox="0.00 0.00 415.00 271.00" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 267)">
<title>playrho::d2::detail::IsValidJointType&lt; T, std::void_t&lt; decltype(GetBodyA(std::declval&lt; T &gt;())), decltype(GetBodyB(std::declval&lt; T &gt;())), decltype(GetCollideConnected(std::declval&lt; T &gt;())), decltype(ShiftOrigin(std::declval&lt; T &amp; &gt;(), std::declval&lt; Length2 &gt;())), decltype(InitVelocity(std::declval&lt; T &amp; &gt;(), std::declval&lt; const Span&lt; BodyConstraint &gt; &amp; &gt;(), std::declval&lt; StepConf &gt;(), std::declval&lt; ConstraintSolverConf &gt;())), decltype(SolveVelocity(std::declval&lt; T &amp; &gt;(), std::declval&lt; const Span&lt; BodyConstraint &gt; &amp; &gt;(), std::declval&lt; StepConf &gt;())), decltype(SolvePosition(std::declval&lt; T &gt;(), std::declval&lt; const Span&lt; BodyConstraint &gt; &amp; &gt;(), std::declval&lt; ConstraintSolverConf &gt;())), decltype(std::declval&lt; T &gt;()==std::declval&lt; T &gt;()), decltype(Joint{std::declval&lt; T &gt;()})&gt; &gt;</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-267 411,-267 411,4 -4,4"/>
<!-- Node1 -->
<g id="node1" class="node">
<title>Node1</title>
<g id="a_node1"><a xlink:title="An &quot;is valid joint type&quot; trait.">
<polygon fill="#bfbfbf" stroke="black" points="0,-0.5 0,-206.5 407,-206.5 407,-0.5 0,-0.5"/>
<text text-anchor="start" x="8" y="-194.5" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::d2::detail</text>
<text text-anchor="start" x="8" y="-183.5" font-family="Helvetica,sans-Serif" font-size="10.00">::IsValidJointType&lt;</text>
<text text-anchor="start" x="8" y="-172.5" font-family="Helvetica,sans-Serif" font-size="10.00"> T, std::void_t&lt; decltype</text>
<text text-anchor="start" x="8" y="-161.5" font-family="Helvetica,sans-Serif" font-size="10.00">(GetBodyA(std::declval&lt;</text>
<text text-anchor="start" x="8" y="-150.5" font-family="Helvetica,sans-Serif" font-size="10.00"> T &gt;())), decltype(GetBodyB</text>
<text text-anchor="start" x="8" y="-139.5" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; T &gt;())), decltype</text>
<text text-anchor="start" x="8" y="-128.5" font-family="Helvetica,sans-Serif" font-size="10.00">(GetCollideConnected(std::declval</text>
<text text-anchor="start" x="8" y="-117.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T &gt;())), decltype(ShiftOrigin(std</text>
<text text-anchor="start" x="8" y="-106.5" font-family="Helvetica,sans-Serif" font-size="10.00">::declval&lt; T &amp; &gt;(), std::declval&lt; Length2</text>
<text text-anchor="start" x="8" y="-95.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;())), decltype(InitVelocity(std::declval</text>
<text text-anchor="start" x="8" y="-84.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T &amp; &gt;(), std::declval&lt; const Span&lt; BodyConstraint</text>
<text text-anchor="start" x="8" y="-73.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; &amp; &gt;(), std::declval&lt; StepConf &gt;(), std::declval</text>
<text text-anchor="start" x="8" y="-62.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; ConstraintSolverConf &gt;())), decltype(SolveVelocity</text>
<text text-anchor="start" x="8" y="-51.5" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; T &amp; &gt;(), std::declval&lt; const Span&lt; BodyConstraint</text>
<text text-anchor="start" x="8" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; &amp; &gt;(), std::declval&lt; StepConf &gt;())), decltype(SolvePosition</text>
<text text-anchor="start" x="8" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; T &gt;(), std::declval&lt; const Span&lt; BodyConstraint</text>
<text text-anchor="start" x="8" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; &amp; &gt;(), std::declval&lt; ConstraintSolverConf &gt;())), decltype(std</text>
<text text-anchor="middle" x="203.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00">::declval&lt; T &gt;()==std::declval&lt; T &gt;()), decltype(Joint{std::declval&lt; T &gt;()})&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node2 -->
<g id="node2" class="node">
<title>Node2</title>
<g id="a_node2"><a xlink:title=" ">
<polygon fill="white" stroke="#bfbfbf" points="161.5,-243.5 161.5,-262.5 245.5,-262.5 245.5,-243.5 161.5,-243.5"/>
<text text-anchor="middle" x="203.5" y="-250.5" font-family="Helvetica,sans-Serif" font-size="10.00">std::true_type</text>
</a>
</g>
</g>
<!-- Node2&#45;&gt;Node1 -->
<g id="edge1" class="edge">
<title>Node2&#45;&gt;Node1</title>
<path fill="none" stroke="midnightblue" d="M203.5,-233.13C203.5,-225.74 203.5,-216.67 203.5,-206.78"/>
<polygon fill="midnightblue" stroke="midnightblue" points="200,-233.21 203.5,-243.21 207,-233.21 200,-233.21"/>
</g>
</g>
</svg>
