<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN"
 "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<!-- Generated by graphviz version 2.43.0 (0)
 -->
<!-- Title: Graphical Class Hierarchy Pages: 1 -->
<svg width="535pt" height="1986pt"
 viewBox="0.00 0.00 535.00 1985.50" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<g id="graph0" class="graph" transform="scale(1 1) rotate(0) translate(4 1981.5)">
<title>Graphical Class Hierarchy</title>
<polygon fill="white" stroke="transparent" points="-4,4 -4,-1981.5 531,-1981.5 531,4 -4,4"/>
<!-- Node267 -->
<g id="node1" class="node">
<title>Node267</title>
<g id="a_node1"><a xlink:title=" ">
<polygon fill="white" stroke="#bfbfbf" points="0,-792 0,-811 84,-811 84,-792 0,-792"/>
<text text-anchor="middle" x="42" y="-799" font-family="Helvetica,sans-Serif" font-size="10.00">std::true_type</text>
</a>
</g>
</g>
<!-- Node0 -->
<g id="node2" class="node">
<title>Node0</title>
<g id="a_node2"><a xlink:href="structplayrho_1_1d2_1_1detail_1_1HasRotate_3_01T_00_01std_1_1void__t_3_01decltype_07Rotate_07std62a66955e9a2a172254d7811a6654ce0.html" target="_top" xlink:title="Type trait for finding a Rotate(T&amp;, Angle) function.">
<polygon fill="white" stroke="black" points="243,-1914 243,-1977 404,-1977 404,-1914 243,-1914"/>
<text text-anchor="start" x="251" y="-1965" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::d2::detail</text>
<text text-anchor="start" x="251" y="-1954" font-family="Helvetica,sans-Serif" font-size="10.00">::HasRotate&lt; T, std</text>
<text text-anchor="start" x="251" y="-1943" font-family="Helvetica,sans-Serif" font-size="10.00">::void_t&lt; decltype(Rotate</text>
<text text-anchor="start" x="251" y="-1932" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; T &amp; &gt;(),</text>
<text text-anchor="middle" x="323.5" y="-1921" font-family="Helvetica,sans-Serif" font-size="10.00"> std::declval&lt; Angle &gt;()))&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node267&#45;&gt;Node0 -->
<g id="edge1" class="edge">
<title>Node267&#45;&gt;Node0</title>
<path fill="none" stroke="midnightblue" d="M42.97,-821.46C42.92,-963.66 45.72,-1819.87 120,-1904.5 150.05,-1938.74 200.12,-1949.1 242.95,-1950.84"/>
<polygon fill="midnightblue" stroke="midnightblue" points="46.47,-821.2 42.98,-811.2 39.47,-821.19 46.47,-821.2"/>
</g>
<!-- Node269 -->
<g id="node3" class="node">
<title>Node269</title>
<g id="a_node3"><a xlink:href="structplayrho_1_1d2_1_1detail_1_1HasScale_3_01T_00_01std_1_1void__t_3_01decltype_07Scale_07std_188533d5a8a51dfdbebad0f0683820ad9.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="black" points="245.5,-1832 245.5,-1895 401.5,-1895 401.5,-1832 245.5,-1832"/>
<text text-anchor="start" x="253.5" y="-1883" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::d2::detail</text>
<text text-anchor="start" x="253.5" y="-1872" font-family="Helvetica,sans-Serif" font-size="10.00">::HasScale&lt; T, std::</text>
<text text-anchor="start" x="253.5" y="-1861" font-family="Helvetica,sans-Serif" font-size="10.00">void_t&lt; decltype(Scale</text>
<text text-anchor="start" x="253.5" y="-1850" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; T &amp; &gt;(),</text>
<text text-anchor="middle" x="323.5" y="-1839" font-family="Helvetica,sans-Serif" font-size="10.00"> std::declval&lt; Vec2 &gt;()))&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node267&#45;&gt;Node269 -->
<g id="edge2" class="edge">
<title>Node267&#45;&gt;Node269</title>
<path fill="none" stroke="midnightblue" d="M43.08,-821.22C43.84,-956.5 51.2,-1744.56 120,-1822.5 150.68,-1857.26 202,-1867.37 245.3,-1868.86"/>
<polygon fill="midnightblue" stroke="midnightblue" points="46.58,-821.07 43.03,-811.08 39.58,-821.1 46.58,-821.07"/>
</g>
<!-- Node270 -->
<g id="node4" class="node">
<title>Node270</title>
<g id="a_node4"><a xlink:href="structplayrho_1_1d2_1_1detail_1_1HasSetDensity_3_01T_00_01std_1_1void__t_3_01decltype_07SetDensi6334c25e1bf7072f2d48adeeb41f71b0.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="black" points="246,-1728 246,-1813 401,-1813 401,-1728 246,-1728"/>
<text text-anchor="start" x="254" y="-1801" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::d2::detail</text>
<text text-anchor="start" x="254" y="-1790" font-family="Helvetica,sans-Serif" font-size="10.00">::HasSetDensity&lt; T,</text>
<text text-anchor="start" x="254" y="-1779" font-family="Helvetica,sans-Serif" font-size="10.00"> std::void_t&lt; decltype</text>
<text text-anchor="start" x="254" y="-1768" font-family="Helvetica,sans-Serif" font-size="10.00">(SetDensity(std::declval</text>
<text text-anchor="start" x="254" y="-1757" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T &amp; &gt;(), std::declval&lt;</text>
<text text-anchor="start" x="254" y="-1746" font-family="Helvetica,sans-Serif" font-size="10.00"> NonNegative&lt; AreaDensity</text>
<text text-anchor="middle" x="323.5" y="-1735" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;&gt;()))&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node267&#45;&gt;Node270 -->
<g id="edge3" class="edge">
<title>Node267&#45;&gt;Node270</title>
<path fill="none" stroke="midnightblue" d="M43.31,-821.48C45.48,-949.15 60.07,-1647.57 120,-1718.5 150.46,-1754.54 202.2,-1767.39 245.76,-1771.3"/>
<polygon fill="midnightblue" stroke="midnightblue" points="46.81,-821.17 43.14,-811.23 39.81,-821.29 46.81,-821.17"/>
</g>
<!-- Node271 -->
<g id="node5" class="node">
<title>Node271</title>
<g id="a_node5"><a xlink:href="structplayrho_1_1d2_1_1detail_1_1HasSetFilter_3_01T_00_01std_1_1void__t_3_01decltype_07SetFilter7d56cfc383c1846af220c7b30e52463f.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="black" points="248.5,-1646 248.5,-1709 398.5,-1709 398.5,-1646 248.5,-1646"/>
<text text-anchor="start" x="256.5" y="-1697" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::d2::detail</text>
<text text-anchor="start" x="256.5" y="-1686" font-family="Helvetica,sans-Serif" font-size="10.00">::HasSetFilter&lt; T, std</text>
<text text-anchor="start" x="256.5" y="-1675" font-family="Helvetica,sans-Serif" font-size="10.00">::void_t&lt; decltype(SetFilter</text>
<text text-anchor="start" x="256.5" y="-1664" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; T &amp; &gt;(), std</text>
<text text-anchor="middle" x="323.5" y="-1653" font-family="Helvetica,sans-Serif" font-size="10.00">::declval&lt; Filter &gt;()))&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node267&#45;&gt;Node271 -->
<g id="edge4" class="edge">
<title>Node267&#45;&gt;Node271</title>
<path fill="none" stroke="midnightblue" d="M43.43,-821.21C46.26,-941.5 63.71,-1573.79 120,-1636.5 151.63,-1671.74 204.48,-1681.53 248.26,-1682.76"/>
<polygon fill="midnightblue" stroke="midnightblue" points="46.93,-821.12 43.2,-811.2 39.93,-821.28 46.93,-821.12"/>
</g>
<!-- Node272 -->
<g id="node6" class="node">
<title>Node272</title>
<g id="a_node6"><a xlink:href="structplayrho_1_1d2_1_1detail_1_1HasSetFriction_3_01T_00_01std_1_1void__t_3_01decltype_07SetFric25596caa4d6b3f4be1d7f3cda7f6d668.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="black" points="256.5,-1552.5 256.5,-1626.5 390.5,-1626.5 390.5,-1552.5 256.5,-1552.5"/>
<text text-anchor="start" x="264.5" y="-1614.5" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::d2::detail</text>
<text text-anchor="start" x="264.5" y="-1603.5" font-family="Helvetica,sans-Serif" font-size="10.00">::HasSetFriction&lt; T,</text>
<text text-anchor="start" x="264.5" y="-1592.5" font-family="Helvetica,sans-Serif" font-size="10.00"> std::void_t&lt; decltype</text>
<text text-anchor="start" x="264.5" y="-1581.5" font-family="Helvetica,sans-Serif" font-size="10.00">(SetFriction(std::declval</text>
<text text-anchor="start" x="264.5" y="-1570.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T &amp; &gt;(), std::declval&lt;</text>
<text text-anchor="middle" x="323.5" y="-1559.5" font-family="Helvetica,sans-Serif" font-size="10.00"> Real &gt;()))&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node267&#45;&gt;Node272 -->
<g id="edge5" class="edge">
<title>Node267&#45;&gt;Node272</title>
<path fill="none" stroke="midnightblue" d="M43.7,-821.38C47.84,-933.9 70.62,-1487.81 120,-1543.5 153.49,-1581.26 210.91,-1591.48 256.07,-1592.99"/>
<polygon fill="midnightblue" stroke="midnightblue" points="47.19,-821 43.33,-811.13 40.19,-821.25 47.19,-821"/>
</g>
<!-- Node273 -->
<g id="node7" class="node">
<title>Node273</title>
<g id="a_node7"><a xlink:href="structplayrho_1_1d2_1_1detail_1_1HasSetRestitution_3_01T_00_01std_1_1void__t_3_01decltype_07SetR1541d40bc3fa6b90327fac5a17478e7e.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="black" points="244.5,-1459.5 244.5,-1533.5 402.5,-1533.5 402.5,-1459.5 244.5,-1459.5"/>
<text text-anchor="start" x="252.5" y="-1521.5" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::d2::detail</text>
<text text-anchor="start" x="252.5" y="-1510.5" font-family="Helvetica,sans-Serif" font-size="10.00">::HasSetRestitution</text>
<text text-anchor="start" x="252.5" y="-1499.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T, std::void_t&lt; decltype</text>
<text text-anchor="start" x="252.5" y="-1488.5" font-family="Helvetica,sans-Serif" font-size="10.00">(SetRestitution(std::declval</text>
<text text-anchor="start" x="252.5" y="-1477.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T &amp; &gt;(), std::declval&lt; Real</text>
<text text-anchor="middle" x="323.5" y="-1466.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;()))&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node267&#45;&gt;Node273 -->
<g id="edge6" class="edge">
<title>Node267&#45;&gt;Node273</title>
<path fill="none" stroke="midnightblue" d="M44.02,-821.4C49.51,-925.17 76.92,-1401.41 120,-1449.5 150.82,-1483.91 201.45,-1495.66 244.37,-1498.81"/>
<polygon fill="midnightblue" stroke="midnightblue" points="47.51,-821.14 43.49,-811.34 40.52,-821.51 47.51,-821.14"/>
</g>
<!-- Node274 -->
<g id="node8" class="node">
<title>Node274</title>
<g id="a_node8"><a xlink:href="structplayrho_1_1d2_1_1detail_1_1HasSetSensor_3_01T_00_01std_1_1void__t_3_01decltype_07SetSensor8aafe605274f89b9262f371793a0934e.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="black" points="244.5,-1377 244.5,-1440 402.5,-1440 402.5,-1377 244.5,-1377"/>
<text text-anchor="start" x="252.5" y="-1428" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::d2::detail</text>
<text text-anchor="start" x="252.5" y="-1417" font-family="Helvetica,sans-Serif" font-size="10.00">::HasSetSensor&lt; T, std</text>
<text text-anchor="start" x="252.5" y="-1406" font-family="Helvetica,sans-Serif" font-size="10.00">::void_t&lt; decltype(SetSensor</text>
<text text-anchor="start" x="252.5" y="-1395" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; T &amp; &gt;(), std</text>
<text text-anchor="middle" x="323.5" y="-1384" font-family="Helvetica,sans-Serif" font-size="10.00">::declval&lt; bool &gt;()))&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node267&#45;&gt;Node274 -->
<g id="edge7" class="edge">
<title>Node267&#45;&gt;Node274</title>
<path fill="none" stroke="midnightblue" d="M42.75,-821.23C42.05,-911.72 43.82,-1286.23 120,-1367.5 151.28,-1400.87 201.63,-1411.17 244.3,-1413.1"/>
<polygon fill="midnightblue" stroke="midnightblue" points="46.26,-821.05 42.86,-811.01 39.26,-820.98 46.26,-821.05"/>
</g>
<!-- Node275 -->
<g id="node9" class="node">
<title>Node275</title>
<g id="a_node9"><a xlink:href="structplayrho_1_1d2_1_1detail_1_1HasTranslate_3_01T_00_01std_1_1void__t_3_01decltype_07Translateb66547472d2c171689f299e86e1970e0.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="black" points="246.5,-1295 246.5,-1358 400.5,-1358 400.5,-1295 246.5,-1295"/>
<text text-anchor="start" x="254.5" y="-1346" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::d2::detail</text>
<text text-anchor="start" x="254.5" y="-1335" font-family="Helvetica,sans-Serif" font-size="10.00">::HasTranslate&lt; T, std</text>
<text text-anchor="start" x="254.5" y="-1324" font-family="Helvetica,sans-Serif" font-size="10.00">::void_t&lt; decltype(Translate</text>
<text text-anchor="start" x="254.5" y="-1313" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; T &amp; &gt;(), std</text>
<text text-anchor="middle" x="323.5" y="-1302" font-family="Helvetica,sans-Serif" font-size="10.00">::declval&lt; Length2 &gt;()))&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node267&#45;&gt;Node275 -->
<g id="edge8" class="edge">
<title>Node267&#45;&gt;Node275</title>
<path fill="none" stroke="midnightblue" d="M43.26,-821.43C44.75,-903.9 54.69,-1217.38 120,-1285.5 152.02,-1318.9 203.19,-1329.05 246.08,-1330.9"/>
<polygon fill="midnightblue" stroke="midnightblue" points="46.75,-821.13 43.1,-811.18 39.76,-821.24 46.75,-821.13"/>
</g>
<!-- Node276 -->
<g id="node10" class="node">
<title>Node276</title>
<g id="a_node10"><a xlink:href="structplayrho_1_1d2_1_1detail_1_1IsValidJointType_3_01T_00_01std_1_1void__t_3_01decltype_07GetBo47eab3fc68beccae0775fbf74eefbb54.html" target="_top" xlink:title="An &quot;is valid joint type&quot; trait.">
<polygon fill="white" stroke="black" points="120,-1069.5 120,-1275.5 527,-1275.5 527,-1069.5 120,-1069.5"/>
<text text-anchor="start" x="128" y="-1263.5" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::d2::detail</text>
<text text-anchor="start" x="128" y="-1252.5" font-family="Helvetica,sans-Serif" font-size="10.00">::IsValidJointType&lt;</text>
<text text-anchor="start" x="128" y="-1241.5" font-family="Helvetica,sans-Serif" font-size="10.00"> T, std::void_t&lt; decltype</text>
<text text-anchor="start" x="128" y="-1230.5" font-family="Helvetica,sans-Serif" font-size="10.00">(GetBodyA(std::declval&lt;</text>
<text text-anchor="start" x="128" y="-1219.5" font-family="Helvetica,sans-Serif" font-size="10.00"> T &gt;())), decltype(GetBodyB</text>
<text text-anchor="start" x="128" y="-1208.5" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; T &gt;())), decltype</text>
<text text-anchor="start" x="128" y="-1197.5" font-family="Helvetica,sans-Serif" font-size="10.00">(GetCollideConnected(std::declval</text>
<text text-anchor="start" x="128" y="-1186.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T &gt;())), decltype(ShiftOrigin(std</text>
<text text-anchor="start" x="128" y="-1175.5" font-family="Helvetica,sans-Serif" font-size="10.00">::declval&lt; T &amp; &gt;(), std::declval&lt; Length2</text>
<text text-anchor="start" x="128" y="-1164.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;())), decltype(InitVelocity(std::declval</text>
<text text-anchor="start" x="128" y="-1153.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T &amp; &gt;(), std::declval&lt; const Span&lt; BodyConstraint</text>
<text text-anchor="start" x="128" y="-1142.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; &amp; &gt;(), std::declval&lt; StepConf &gt;(), std::declval</text>
<text text-anchor="start" x="128" y="-1131.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; ConstraintSolverConf &gt;())), decltype(SolveVelocity</text>
<text text-anchor="start" x="128" y="-1120.5" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; T &amp; &gt;(), std::declval&lt; const Span&lt; BodyConstraint</text>
<text text-anchor="start" x="128" y="-1109.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; &amp; &gt;(), std::declval&lt; StepConf &gt;())), decltype(SolvePosition</text>
<text text-anchor="start" x="128" y="-1098.5" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; T &gt;(), std::declval&lt; const Span&lt; BodyConstraint</text>
<text text-anchor="start" x="128" y="-1087.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt; &amp; &gt;(), std::declval&lt; ConstraintSolverConf &gt;())), decltype(std</text>
<text text-anchor="middle" x="323.5" y="-1076.5" font-family="Helvetica,sans-Serif" font-size="10.00">::declval&lt; T &gt;()==std::declval&lt; T &gt;()), decltype(Joint{std::declval&lt; T &gt;()})&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node267&#45;&gt;Node276 -->
<g id="edge9" class="edge">
<title>Node267&#45;&gt;Node276</title>
<path fill="none" stroke="midnightblue" d="M43.95,-821.34C47.15,-867.92 60.96,-985.88 120,-1059.5 122.64,-1062.8 125.41,-1066.02 128.29,-1069.15"/>
<polygon fill="midnightblue" stroke="midnightblue" points="47.43,-820.88 43.35,-811.11 40.44,-821.3 47.43,-820.88"/>
</g>
<!-- Node277 -->
<g id="node11" class="node">
<title>Node277</title>
<g id="a_node11"><a xlink:href="structplayrho_1_1d2_1_1detail_1_1IsValidShapeType_3_01T_00_01std_1_1void__t_3_01decltype_07GetCh6e61a5840b735d119f7d25ad6ffcdafa.html" target="_top" xlink:title="An &quot;is valid shape type&quot; trait.">
<polygon fill="white" stroke="black" points="134.5,-877 134.5,-1050 512.5,-1050 512.5,-877 134.5,-877"/>
<text text-anchor="start" x="142.5" y="-1038" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::d2::detail</text>
<text text-anchor="start" x="142.5" y="-1027" font-family="Helvetica,sans-Serif" font-size="10.00">::IsValidShapeType&lt;</text>
<text text-anchor="start" x="142.5" y="-1016" font-family="Helvetica,sans-Serif" font-size="10.00"> T, std::void_t&lt; decltype</text>
<text text-anchor="start" x="142.5" y="-1005" font-family="Helvetica,sans-Serif" font-size="10.00">(GetChildCount(std::declval</text>
<text text-anchor="start" x="142.5" y="-994" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T &gt;())), decltype(GetChild</text>
<text text-anchor="start" x="142.5" y="-983" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; T &gt;(), std::declval</text>
<text text-anchor="start" x="142.5" y="-972" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; ChildCounter &gt;())), decltype(GetMassData</text>
<text text-anchor="start" x="142.5" y="-961" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; T &gt;())), decltype(GetVertexRadius</text>
<text text-anchor="start" x="142.5" y="-950" font-family="Helvetica,sans-Serif" font-size="10.00">(std::declval&lt; T &gt;(), std::declval&lt; ChildCounter</text>
<text text-anchor="start" x="142.5" y="-939" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;())), decltype(GetDensity(std::declval&lt; T &gt;())</text>
<text text-anchor="start" x="142.5" y="-928" font-family="Helvetica,sans-Serif" font-size="10.00">), decltype(GetFriction(std::declval&lt; T &gt;())), decltype</text>
<text text-anchor="start" x="142.5" y="-917" font-family="Helvetica,sans-Serif" font-size="10.00">(GetRestitution(std::declval&lt; T &gt;())), decltype(std::</text>
<text text-anchor="start" x="142.5" y="-906" font-family="Helvetica,sans-Serif" font-size="10.00">declval&lt; T &gt;()==std::declval&lt; T &gt;()), decltype(std::declval</text>
<text text-anchor="start" x="142.5" y="-895" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; DecayedTypeIfNotSame&lt; T, Shape &gt;&gt;()), decltype(std::is_constructible</text>
<text text-anchor="middle" x="323.5" y="-884" font-family="Helvetica,sans-Serif" font-size="10.00">_v&lt; DecayedTypeIfNotSame&lt; T, Shape &gt;, T &gt;)&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node267&#45;&gt;Node277 -->
<g id="edge10" class="edge">
<title>Node267&#45;&gt;Node277</title>
<path fill="none" stroke="midnightblue" d="M60.22,-818.63C75.16,-832.88 97.82,-853.1 120,-867.5 124.9,-870.68 129.91,-873.81 135.02,-876.9"/>
<polygon fill="midnightblue" stroke="midnightblue" points="62.38,-815.85 52.77,-811.4 57.51,-820.87 62.38,-815.85"/>
</g>
<!-- Node278 -->
<g id="node12" class="node">
<title>Node278</title>
<g id="a_node12"><a xlink:href="structplayrho_1_1detail_1_1IsAddable_3_01T1_00_01T2_00_01std_1_1void__t_3_01decltype_07T1_02_03_09T2_02_03_08_4_01_4.html" target="_top" xlink:title="Template specializing for addable types.">
<polygon fill="white" stroke="black" points="239.5,-817 239.5,-858 407.5,-858 407.5,-817 239.5,-817"/>
<text text-anchor="start" x="247.5" y="-846" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::detail::IsAddable</text>
<text text-anchor="start" x="247.5" y="-835" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T1, T2, std::void_t&lt; decltype</text>
<text text-anchor="middle" x="323.5" y="-824" font-family="Helvetica,sans-Serif" font-size="10.00">(T1{}+T2{})&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node267&#45;&gt;Node278 -->
<g id="edge11" class="edge">
<title>Node267&#45;&gt;Node278</title>
<path fill="none" stroke="midnightblue" d="M94.18,-808.09C134.76,-813.32 192.31,-820.73 239.47,-826.81"/>
<polygon fill="midnightblue" stroke="midnightblue" points="94.61,-804.62 84.24,-806.81 93.71,-811.56 94.61,-804.62"/>
</g>
<!-- Node279 -->
<g id="node13" class="node">
<title>Node279</title>
<g id="a_node13"><a xlink:href="structplayrho_1_1detail_1_1IsArithmetic_3_01T_00_01std_1_1void__t_3_01decltype_07T_02_03_09T_02_1d1a3b924c473a70e90f3ccf5def5509.html" target="_top" xlink:title="Template specialization for valid/acceptable &quot;arithmetic&quot; types.">
<polygon fill="white" stroke="black" points="233.5,-735 233.5,-798 413.5,-798 413.5,-735 233.5,-735"/>
<text text-anchor="start" x="241.5" y="-786" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::detail::IsArithmetic</text>
<text text-anchor="start" x="241.5" y="-775" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T, std::void_t&lt; decltype</text>
<text text-anchor="start" x="241.5" y="-764" font-family="Helvetica,sans-Serif" font-size="10.00">(T{}+T{}), decltype(T{} &#45; T</text>
<text text-anchor="start" x="241.5" y="-753" font-family="Helvetica,sans-Serif" font-size="10.00">{}), decltype(T{} *T{}), decltype</text>
<text text-anchor="middle" x="323.5" y="-742" font-family="Helvetica,sans-Serif" font-size="10.00">(T{}/T{})&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node267&#45;&gt;Node279 -->
<g id="edge12" class="edge">
<title>Node267&#45;&gt;Node279</title>
<path fill="none" stroke="midnightblue" d="M94.27,-795.08C133.12,-790.21 187.48,-783.41 233.4,-777.66"/>
<polygon fill="midnightblue" stroke="midnightblue" points="93.73,-791.62 84.24,-796.34 94.6,-798.57 93.73,-791.62"/>
</g>
<!-- Node280 -->
<g id="node14" class="node">
<title>Node280</title>
<g id="a_node14"><a xlink:href="structplayrho_1_1detail_1_1IsDivisable_3_01T1_00_01T2_00_01std_1_1void__t_3_01decltype_07T1_02_03_2T2_02_03_08_4_01_4.html" target="_top" xlink:title="Template specializing for divisable types.">
<polygon fill="white" stroke="black" points="239.5,-675 239.5,-716 407.5,-716 407.5,-675 239.5,-675"/>
<text text-anchor="start" x="247.5" y="-704" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::detail::IsDivisable</text>
<text text-anchor="start" x="247.5" y="-693" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T1, T2, std::void_t&lt; decltype</text>
<text text-anchor="middle" x="323.5" y="-682" font-family="Helvetica,sans-Serif" font-size="10.00">(T1{}/T2{})&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node267&#45;&gt;Node280 -->
<g id="edge13" class="edge">
<title>Node267&#45;&gt;Node280</title>
<path fill="none" stroke="midnightblue" d="M55.78,-783.43C69.48,-765.57 92.95,-739 120,-725.5 156.57,-707.25 201.15,-699.34 239.16,-696.17"/>
<polygon fill="midnightblue" stroke="midnightblue" points="52.67,-781.75 49.54,-791.87 58.3,-785.91 52.67,-781.75"/>
</g>
<!-- Node281 -->
<g id="node15" class="node">
<title>Node281</title>
<g id="a_node15"><a xlink:href="structplayrho_1_1detail_1_1IsEqualityComparable_3_01T1_00_01T2_00_01std_1_1void__t_3_01decltype_397e13302495d65cbf0119afdf1f7e4d.html" target="_top" xlink:title="Template specialization for equality comparable types.">
<polygon fill="white" stroke="black" points="252.5,-603.5 252.5,-655.5 394.5,-655.5 394.5,-603.5 252.5,-603.5"/>
<text text-anchor="start" x="260.5" y="-643.5" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::detail::IsEquality</text>
<text text-anchor="start" x="260.5" y="-632.5" font-family="Helvetica,sans-Serif" font-size="10.00">Comparable&lt; T1, T2, std</text>
<text text-anchor="start" x="260.5" y="-621.5" font-family="Helvetica,sans-Serif" font-size="10.00">::void_t&lt; decltype(T1{}=</text>
<text text-anchor="middle" x="323.5" y="-610.5" font-family="Helvetica,sans-Serif" font-size="10.00">=T2{})&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node267&#45;&gt;Node281 -->
<g id="edge14" class="edge">
<title>Node267&#45;&gt;Node281</title>
<path fill="none" stroke="midnightblue" d="M48.25,-781.86C57.42,-751.65 79.36,-694.25 120,-665.5 158.19,-638.48 210.32,-629.69 252.12,-627.54"/>
<polygon fill="midnightblue" stroke="midnightblue" points="44.84,-781.08 45.44,-791.66 51.57,-783.01 44.84,-781.08"/>
</g>
<!-- Node282 -->
<g id="node16" class="node">
<title>Node282</title>
<g id="a_node16"><a xlink:href="structplayrho_1_1detail_1_1IsInequalityComparable_3_01T1_00_01T2_00_01std_1_1void__t_3_01decltypff02ba6c3b90e96f5ba3c1dc4ad6096a.html" target="_top" xlink:title="Template specialization for inequality comparable types.">
<polygon fill="white" stroke="black" points="228.5,-543 228.5,-584 418.5,-584 418.5,-543 228.5,-543"/>
<text text-anchor="start" x="236.5" y="-572" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::detail::IsInequality</text>
<text text-anchor="start" x="236.5" y="-561" font-family="Helvetica,sans-Serif" font-size="10.00">Comparable&lt; T1, T2, std::</text>
<text text-anchor="middle" x="323.5" y="-550" font-family="Helvetica,sans-Serif" font-size="10.00">void_t&lt; decltype(T1{} !=T2{})&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node267&#45;&gt;Node282 -->
<g id="edge15" class="edge">
<title>Node267&#45;&gt;Node282</title>
<path fill="none" stroke="midnightblue" d="M44.01,-781.73C47.28,-739.91 61.17,-642.4 120,-594.5 149.99,-570.08 191.05,-560.81 228.35,-558.23"/>
<polygon fill="midnightblue" stroke="midnightblue" points="40.51,-781.54 43.35,-791.75 47.5,-782 40.51,-781.54"/>
</g>
<!-- Node283 -->
<g id="node17" class="node">
<title>Node283</title>
<g id="a_node17"><a xlink:href="structplayrho_1_1detail_1_1IsIterable_3_01T_00_01std_1_1void__t_3_01decltype_07begin_07std_1_1deb94b1a3aa8659edf5ae9c473de3326c0.html" target="_top" xlink:title="Low&#45;level implementation of the is&#45;iterable true value trait.">
<polygon fill="white" stroke="black" points="230.5,-427.5 230.5,-523.5 416.5,-523.5 416.5,-427.5 230.5,-427.5"/>
<text text-anchor="start" x="238.5" y="-511.5" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::detail::IsIterable</text>
<text text-anchor="start" x="238.5" y="-500.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T, std::void_t&lt; decltype</text>
<text text-anchor="start" x="238.5" y="-489.5" font-family="Helvetica,sans-Serif" font-size="10.00">(begin(std::declval&lt; T &gt;()</text>
<text text-anchor="start" x="238.5" y="-478.5" font-family="Helvetica,sans-Serif" font-size="10.00">)), decltype(end(std::declval</text>
<text text-anchor="start" x="238.5" y="-467.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T &gt;())), decltype(++std::declval</text>
<text text-anchor="start" x="238.5" y="-456.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; decltype(begin(std::declval&lt; T</text>
<text text-anchor="start" x="238.5" y="-445.5" font-family="Helvetica,sans-Serif" font-size="10.00"> &amp; &gt;()))&amp; &gt;()), decltype(*begin(std</text>
<text text-anchor="middle" x="323.5" y="-434.5" font-family="Helvetica,sans-Serif" font-size="10.00">::declval&lt; T &gt;()))&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node267&#45;&gt;Node283 -->
<g id="edge16" class="edge">
<title>Node267&#45;&gt;Node283</title>
<path fill="none" stroke="midnightblue" d="M42.59,-781.56C42.71,-732.21 50.09,-603.35 120,-533.5 149.1,-504.42 191.73,-489.7 230.38,-482.33"/>
<polygon fill="midnightblue" stroke="midnightblue" points="39.09,-781.85 42.68,-791.82 46.09,-781.79 39.09,-781.85"/>
</g>
<!-- Node284 -->
<g id="node18" class="node">
<title>Node284</title>
<g id="a_node18"><a xlink:href="structplayrho_1_1detail_1_1IsMatrix_3_01Vector_3_01Vector_3_01T_00_01N_01_4_00_01M_01_4_01_4.html" target="_top" xlink:title="Trait class specialization for checking if type is a matrix type.">
<polygon fill="white" stroke="black" points="257,-367 257,-408 390,-408 390,-367 257,-367"/>
<text text-anchor="start" x="265" y="-396" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::detail::IsMatrix</text>
<text text-anchor="start" x="265" y="-385" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; Vector&lt; Vector&lt; T, N</text>
<text text-anchor="middle" x="323.5" y="-374" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;, M &gt; &gt;</text>
</a>
</g>
</g>
<!-- Node267&#45;&gt;Node284 -->
<g id="edge17" class="edge">
<title>Node267&#45;&gt;Node284</title>
<path fill="none" stroke="midnightblue" d="M44.09,-781.47C48.39,-710.05 66.67,-469.4 120,-418.5 155.76,-384.37 212.39,-378.16 256.68,-379.62"/>
<polygon fill="midnightblue" stroke="midnightblue" points="40.57,-781.58 43.49,-791.77 47.56,-781.98 40.57,-781.58"/>
</g>
<!-- Node285 -->
<g id="node19" class="node">
<title>Node285</title>
<g id="a_node19"><a xlink:href="structplayrho_1_1detail_1_1IsMultipliable_3_01T1_00_01T2_00_01std_1_1void__t_3_01decltype_07T1_02_03_01_5T2_02_03_08_4_01_4.html" target="_top" xlink:title="Template specializing for multipliable types.">
<polygon fill="white" stroke="black" points="239.5,-307 239.5,-348 407.5,-348 407.5,-307 239.5,-307"/>
<text text-anchor="start" x="247.5" y="-336" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::detail::IsMultipliable</text>
<text text-anchor="start" x="247.5" y="-325" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T1, T2, std::void_t&lt; decltype</text>
<text text-anchor="middle" x="323.5" y="-314" font-family="Helvetica,sans-Serif" font-size="10.00">(T1{} *T2{})&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node267&#45;&gt;Node285 -->
<g id="edge18" class="edge">
<title>Node267&#45;&gt;Node285</title>
<path fill="none" stroke="midnightblue" d="M43.48,-781.4C45.79,-702.82 58.35,-417.65 120,-357.5 150.97,-327.28 198.29,-319.02 239.39,-318.67"/>
<polygon fill="midnightblue" stroke="midnightblue" points="39.97,-781.73 43.2,-791.82 46.97,-781.91 39.97,-781.73"/>
</g>
<!-- Node286 -->
<g id="node20" class="node">
<title>Node286</title>
<g id="a_node20"><a xlink:href="structplayrho_1_1detail_1_1IsReverseIterable_3_01T_00_01std_1_1void__t_3_01decltype_07rbegin_07see1e2b2bf8c70ff6417e9800f5336264.html" target="_top" xlink:title="Low&#45;level implementation of the is&#45;reverse&#45;iterable true value trait.">
<polygon fill="white" stroke="black" points="228,-181 228,-288 419,-288 419,-181 228,-181"/>
<text text-anchor="start" x="236" y="-276" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::detail::IsReverse</text>
<text text-anchor="start" x="236" y="-265" font-family="Helvetica,sans-Serif" font-size="10.00">Iterable&lt; T, std::void</text>
<text text-anchor="start" x="236" y="-254" font-family="Helvetica,sans-Serif" font-size="10.00">_t&lt; decltype(rbegin(std</text>
<text text-anchor="start" x="236" y="-243" font-family="Helvetica,sans-Serif" font-size="10.00">::declval&lt; T &gt;())), decltype</text>
<text text-anchor="start" x="236" y="-232" font-family="Helvetica,sans-Serif" font-size="10.00">(rend(std::declval&lt; T &gt;())),</text>
<text text-anchor="start" x="236" y="-221" font-family="Helvetica,sans-Serif" font-size="10.00"> decltype(++std::declval&lt; decltype</text>
<text text-anchor="start" x="236" y="-210" font-family="Helvetica,sans-Serif" font-size="10.00">(rbegin(std::declval&lt; T &amp; &gt;()))&amp;</text>
<text text-anchor="start" x="236" y="-199" font-family="Helvetica,sans-Serif" font-size="10.00"> &gt;()), decltype(*rbegin(std::declval</text>
<text text-anchor="middle" x="323.5" y="-188" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T &gt;()))&gt; &gt;</text>
</a>
</g>
</g>
<!-- Node267&#45;&gt;Node286 -->
<g id="edge19" class="edge">
<title>Node267&#45;&gt;Node286</title>
<path fill="none" stroke="midnightblue" d="M43.31,-781.74C45.02,-697.86 55.77,-372.16 120,-297.5 146.89,-266.24 189.01,-250.27 227.89,-242.2"/>
<polygon fill="midnightblue" stroke="midnightblue" points="39.81,-781.86 43.12,-791.92 46.81,-781.99 39.81,-781.86"/>
</g>
<!-- Node287 -->
<g id="node21" class="node">
<title>Node287</title>
<g id="a_node21"><a xlink:href="structplayrho_1_1detail_1_1IsSquareMatrix_3_01Vector_3_01Vector_3_01T_00_01M_01_4_00_01M_01_4_01_4.html" target="_top" xlink:title="Trait class specialization for checking if type is a square matrix type.">
<polygon fill="white" stroke="black" points="256,-121 256,-162 391,-162 391,-121 256,-121"/>
<text text-anchor="start" x="264" y="-150" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::detail::IsSquare</text>
<text text-anchor="start" x="264" y="-139" font-family="Helvetica,sans-Serif" font-size="10.00">Matrix&lt; Vector&lt; Vector</text>
<text text-anchor="middle" x="323.5" y="-128" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T, M &gt;, M &gt; &gt;</text>
</a>
</g>
</g>
<!-- Node267&#45;&gt;Node287 -->
<g id="edge20" class="edge">
<title>Node267&#45;&gt;Node287</title>
<path fill="none" stroke="midnightblue" d="M44.01,-781.78C49.4,-679.94 76.21,-216.42 120,-171.5 154.48,-136.13 211.22,-130.32 255.88,-132.41"/>
<polygon fill="midnightblue" stroke="midnightblue" points="40.51,-781.73 43.48,-791.9 47.5,-782.1 40.51,-781.73"/>
</g>
<!-- Node288 -->
<g id="node22" class="node">
<title>Node288</title>
<g id="a_node22"><a xlink:href="structplayrho_1_1detail_1_1IsVector_3_01Vector_3_01T_00_01N_01_4_01_4.html" target="_top" xlink:title="Trait class specialization for checking if type is a Vector type..">
<polygon fill="white" stroke="black" points="257.5,-71.5 257.5,-101.5 389.5,-101.5 389.5,-71.5 257.5,-71.5"/>
<text text-anchor="start" x="265.5" y="-89.5" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::detail::IsVector</text>
<text text-anchor="middle" x="323.5" y="-78.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; Vector&lt; T, N &gt; &gt;</text>
</a>
</g>
</g>
<!-- Node267&#45;&gt;Node288 -->
<g id="edge21" class="edge">
<title>Node267&#45;&gt;Node288</title>
<path fill="none" stroke="midnightblue" d="M43.78,-781.6C48.17,-673.57 71.51,-160.56 120,-111.5 154.99,-76.1 212.56,-72.03 257.4,-75.56"/>
<polygon fill="midnightblue" stroke="midnightblue" points="40.27,-781.62 43.37,-791.76 47.27,-781.9 40.27,-781.62"/>
</g>
<!-- Node289 -->
<g id="node23" class="node">
<title>Node289</title>
<g id="a_node23"><a xlink:href="structplayrho_1_1detail_1_1has__underlying__type__member_3_01T_00_01std_1_1void__t_3_01typename_ad40ad34e92198c9932f3ccb254047e0.html" target="_top" xlink:title=" ">
<polygon fill="white" stroke="black" points="247.5,-0.5 247.5,-52.5 399.5,-52.5 399.5,-0.5 247.5,-0.5"/>
<text text-anchor="start" x="255.5" y="-40.5" font-family="Helvetica,sans-Serif" font-size="10.00">playrho::detail::has</text>
<text text-anchor="start" x="255.5" y="-29.5" font-family="Helvetica,sans-Serif" font-size="10.00">_underlying_type_member</text>
<text text-anchor="start" x="255.5" y="-18.5" font-family="Helvetica,sans-Serif" font-size="10.00">&lt; T, std::void_t&lt; typename</text>
<text text-anchor="middle" x="323.5" y="-7.5" font-family="Helvetica,sans-Serif" font-size="10.00"> T::underlying_type &gt; &gt;</text>
</a>
</g>
</g>
<!-- Node267&#45;&gt;Node289 -->
<g id="edge22" class="edge">
<title>Node267&#45;&gt;Node289</title>
<path fill="none" stroke="midnightblue" d="M43.66,-781.66C47.61,-669.4 69.51,-116.77 120,-62.5 151.74,-28.38 203.74,-19.69 247.1,-19.38"/>
<polygon fill="midnightblue" stroke="midnightblue" points="40.16,-781.77 43.31,-791.89 47.16,-782.01 40.16,-781.77"/>
</g>
</g>
</svg>
