# For information on these settings, see:
#    https://www.appveyor.com/docs/build-configuration/
#    https://www.appveyor.com/docs/appveyor-yml/
#
# Notes:
#   - Minimal appveyor.yml file is an empty file. All sections are optional.
#   - Indent each level of configuration with 2 spaces. Do not use tabs!
#   - All section names are case-sensitive.
#   - Section names should be unique on each level.

# The following is supported by default. See:
#   https://www.appveyor.com/docs/how-to/filtering-commits/
#
#skip_commits:
#  message: /\[appveyor skip\]/|/\[skip appveyor\]/

image: Visual Studio 2019

branches:
  only:
    - master

environment:
  matrix:
    - platform: noarch
      configuration: none
    - platform: x64
      configuration: Debug
      additional_flags: "/permissive- /std:c++17"
      triplet: x64-windows-static
      targets: -DCMAKE_GENERATOR_PLATFORM=x64 -DPLAYRHO_BUILD_HELLOWORLD=ON -DPLAYRHO_BUILD_UNIT_TESTS=ON -DPLAYRHO_BUILD_TESTBED=ON
    - platform: x64
      configuration: Release
      additional_flags: "/permissive- /std:c++17"
      triplet: x64-windows-static
      targets: -DCMAKE_GENERATOR_PLATFORM=x64 -DPLAYRHO_BUILD_HELLOWORLD=ON -DPLAYRHO_BUILD_UNIT_TESTS=ON -DPLAYRHO_BUILD_TESTBED=ON -DPLAYRHO_BUILD_BENCHMARK=ON
    - platform: Win32
      configuration: Debug
      additional_flags: "/permissive- /std:c++17"
      triplet: x86-windows-static
      defines: -DCMAKE_GENERATOR_PLATFORM=WIN32 -DPLAYRHO_BUILD_HELLOWORLD=ON -DPLAYRHO_BUILD_UNIT_TESTS=ON -DPLAYRHO_BUILD_TESTBED=ON
    - platform: Win32
      configuration: Release
      additional_flags: "/permissive- /std:c++17"
      triplet: x86-windows-static
      defines: -DCMAKE_GENERATOR_PLATFORM=WIN32 -DPLAYRHO_BUILD_HELLOWORLD=ON -DPLAYRHO_BUILD_UNIT_TESTS=ON -DPLAYRHO_BUILD_TESTBED=ON -DPLAYRHO_BUILD_BENCHMARK=ON

cache:
  - C:\tools\vcpkg\installed\ -> appveyor.yml # preserve any vcpkg installed stuff
  - C:\tools\vcpkg\downloads\ -> appveyor.yml # preserve any vcpkg installed stuff
# Caching these creates issues for doxygen running "dot".
#  - C:\ProgramData\chocolatey\bin -> appveyor.yml
#  - C:\ProgramData\chocolatey\lib -> appveyor.yml

# Install section for installing stuff.
#
# For graphiz info, see: https://chocolatey.org/packages/Graphviz
# Seems the November 19, 2017 update broke the use of the 'dot' program.
#
# For graphviz.portable info, see: https://chocolatey.org/packages/graphviz.portable
# Unfortunately, as of December 2, 2017, "the install of graphviz.portable was not successful".
# Note that as of June 16, 2018, trying to plainly install doxygen.install doesn't work.
# Note that as of June 16, 2018, trying to install doxygen.install -y gets v1.8.13.20171205
# Note that as of June 16, 2018, doxygen.portable works but doesn't handle all the settings in Doxyfile.
install:
  - if "%platform%" equ "noarch" choco install doxygen.install -y
  - if "%platform%" equ "noarch" choco install graphviz
  - if "%platform%" neq "noarch" cmake --version
  - if "%platform%" neq "noarch" git submodule update --init --recursive
  - if "%platform%" neq "noarch" vcpkg install glew:%triplet%
  - if "%platform%" neq "noarch" vcpkg install glfw3:%triplet%

before_build:
  - echo %APPVEYOR_BUILD_FOLDER%
  - if "%platform%" neq "noarch" set generator=Visual Studio 16 2019
  - if "%platform%" equ "x64"    call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars64.bat"
  - if "%platform%" equ "Win32"  call "C:\Program Files (x86)\Microsoft Visual Studio\2019\Community\VC\Auxiliary\Build\vcvars32.bat"

# Handle building the library & binary executables or generating the doxygen docs
# depending on the current environment matrix variable settings.
# Only builds Benchmark app for Release builds. No sense benchmarking Debug builds.
# Note: cmake -DCMAKE_GENERATOR_PLATFORM=WIN32 works but -A Win32 gets "project doesn't contain" Debug|Win32!
build_script:
  - if "%platform%" neq "noarch" cd %APPVEYOR_BUILD_FOLDER%\Build
  - if "%platform%" neq "noarch" cmake -G"%generator%" -DCMAKE_BUILD_TYPE=%configuration% -DCMAKE_TOOLCHAIN_FILE=c:/tools/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET=%triplet% %defines% -DCMAKE_CXX_FLAGS=/D_SILENCE_TR1_NAMESPACE_DEPRECATION_WARNING ..
  - if "%platform%" neq "noarch" cmake --build . --config "%configuration%"
  - if "%platform%" equ "noarch" cd %APPVEYOR_BUILD_FOLDER%\Documentation
  - if "%platform%" equ "noarch" set PATH=c:\Program Files\doxygen\bin;%PATH%
  - if "%platform%" equ "noarch" set PATH=c:\Program Files (x86)\graphviz2.38\bin;%PATH%
  - if "%platform%" equ "noarch" doxygen Doxyfile
  - cd ..

# Run the UnitTests application via CMake's ctest command.
# Just run ctest for Release builds since it's much faster than the Debug build.
test_script:
  - if "%platform%" neq "noarch" cd %APPVEYOR_BUILD_FOLDER%\Build
  - if "%configuration%" equ "Release" ctest --output-on-failure
  - if "%platform%" neq "noarch" cd ..

#build:
#  project: Build/vs2017/PlayRho.sln
#  verbosity: normal

after_build:
  - cd %APPVEYOR_BUILD_FOLDER%
  - if "%platform%" neq "noarch" 7z a artifacts.zip Build\PlayRho\*\*.lib Build\*\*\*.exe
  - if "%platform%" equ "noarch" 7z a artifacts.zip Documentation\API

artifacts:
  - path: artifacts.zip
    name: artifacts
