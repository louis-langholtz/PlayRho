name: windows

on:
  push:
    branches: [ "master", "release-1.1.1" ]
  pull_request:
    branches: [ "master", "release-1.1.1" ]

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-2019
    strategy:
      matrix:
        build_type: [Debug, Release]
        platform: [Win32, x64]

    steps:
    - uses: actions/checkout@v3
      with:
        submodules: true

    - name: Install Prerequisites & Configure
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: |
        $triplet = ""
        $genplat = ""
        switch ("${{matrix.platform}}")
        {
          "Win32" {
            $triplet = "x86-windows-static"
            $genplat = "WIN32"
            cmd.exe /c "call `"C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars32.bat`""
          }
          "x64"   {
            $triplet = "x64-windows-static"
            $genplat = "x64"
            cmd.exe /c "call `"C:\Program Files (x86)\Microsoft Visual Studio\2019\Enterprise\VC\Auxiliary\Build\vcvars64.bat`""
          }
        }
        vcpkg install --triplet=$triplet glew glfw3
        echo "genplat=${genplat}, triplet=${triplet}"
        cmake -B ${{github.workspace}}/build -G"Visual Studio 16 2019" -DCMAKE_BUILD_TYPE=${{matrix.build_type}} -DPLAYRHO_BUILD_HELLOWORLD=ON -DPLAYRHO_BUILD_UNIT_TESTS=ON -DPLAYRHO_BUILD_TESTBED=ON -DCMAKE_GENERATOR_PLATFORM="${genplat}" -DCMAKE_TOOLCHAIN_FILE=C:/vcpkg/scripts/buildsystems/vcpkg.cmake -DVCPKG_TARGET_TRIPLET="${triplet}"

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{matrix.build_type}}

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{matrix.build_type}} --output-on-failure

